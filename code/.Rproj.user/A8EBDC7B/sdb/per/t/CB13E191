{
    "contents" : "#Nested logit coding assignment\nsource('header.R')\n\n#Load data\nval<-readRDS(paste0(varSave, 'choice_values.rds'))\nlambda<-readRDS(paste0(varSave, 'lambda_values.rds'))\n\n# Simulate 10,000 choices corresponding to V_ik and lambda_k values: \nN <- 10^5\nepsilon <- rgev(n = nrow(lambda)*N, xi = 0, mu = 0, beta = 1)\neta <- rgev(n = length(unique(val$choice))*N, xi = 0, mu = 0, beta = 1)\n\n# 1 under the traditional specification where epsilon_k resolves before eta_i\nIV <- left_join(val, lambda, by = \"bucket\") %>%\n      group_by(bucket) %>%\n      summarise(lambda = unique(lambda), iv = log(sum(exp(val/lambda)))) %>%\n      mutate(iv = lambda * iv)\nnest_choice <- data.frame(\n  \"bucket\" = apply(IV$iv + matrix(epsilon,nrow = 3,byrow = TRUE),2,which.max)\n)\n\n# nest_choice <- ldply(seq(N), function(x){\n#   util = IV$iv + rgev(n = nrow(IV), xi = 0, mu = 0, beta = 1)\n#   which.max(util)\n# }) \n\nitem_choice1 <- data.frame(\n  \"bucket\" = nest_choice$bucket,\n  \"choice\" = LETTERS[\n    apply(\n      matrix(\n        left_join(nest_choice,val,by=\"bucket\")$val,\n        nrow = length(unique(val$choice)),\n        ncol = N) + \n        matrix(eta,nrow = 3,byrow = TRUE),\n      2,which.max)\n    ]\n)\n\n# 2 under the single-shot specification where epsilon_k and eta_i both resolve up front  \na <- matrix(eta,nrow = 3,byrow = TRUE)\nU2 <- apply(\n  temp<-\n  val$val + \n  matrix(rep(epsilon,3),nrow = 9, byrow = TRUE) + \n  rep(lambda$lambda,3) * \n  a[rep(seq(nrow(a)),each = 3),],\n  2,\n  which.max\n)\nitem_choice2 <- data.frame(\n  \"bucket\" = val$bucket[U2],\n  \"choice\" = val$choice[U2]\n)\n\n# Estimate choice probabilities and calculate covariance matrix using bootstrap\n# 1 under the traditional specification where epsilon_k resolves before eta_i\n# 2 under the single-shot specification where epsilon_k and eta_i both resolve up front\n\nk_i<- array(val[,1:2])\nProb1<- \n  mdply(k_i, \n        function(k,i) with(item_choice1,sum(bucket == k & choice == i)/nrow(item_choice1))\n        )\ncolnames(Prob1)<- c(\"bucket\", \"choice\", \"prob\")\nProb2<- \n  mdply(k_i, \n        function(k,i) with(item_choice2,sum(bucket == k & choice == i)/nrow(item_choice2))\n  )\ncolnames(Prob1)<- c(\"bucket\", \"choice\", \"prob\")\n\n",
    "created" : 1413680626867.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "990325696",
    "id" : "CB13E191",
    "lastKnownWriteTime" : 1413683565,
    "path" : "C:/Users/Johnny Chan/Desktop/OPNS_NestedLogit/code/matt.R",
    "project_path" : "matt.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}